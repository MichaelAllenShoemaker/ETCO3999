byte Walkmap12[96]=
{
  0x00, 0x00, 0x00, 0x00, 	//row 1
  0x00, 0x00, 0x00, 0x00,	//row 2
  0x3, 0x00, 0x00, 0x3,		//row 3
  0x3, 0x00, 0x00, 0x3,		//row 4
  0x3, 0x00, 0x00, 0x3,		//row 5
  0x3, 0x00, 0x00, 0x3,		//row 6
  0x3, 0x00, 0x00, 0x3,		//row 7
  0x3, 0x00, 0x00, 0x3,		//row 8
  0x00, 0x00, 0x00, 0x00,	//row 9
  0x00, 0x00, 0x00, 0x00,	//row 10
  0x00, 0x00, 0x00, 0x00,	//row 11
  0x00, 0x00, 0x00, 0x00,	//row 12
  0x00, 0x00, 0x00, 0x00,	//row 13
  0x7, 0x00, 0x80, 0xFF,	//row 14
  0x1F, 0x00, 0xE0, 0xFF,	//row 15
  0x7F, 0x00, 0xF8, 0xFF,	//row 16
  0xFF, 0xFF, 0xFF, 0xFF,	//row 17
  0xFF, 0xFF, 0xFF, 0xFF,	//row 18
  0xFF, 0xFF, 0xFF, 0xFF,	//row 19
  0xFF, 0xFF, 0xFF, 0xFF,	//row 20
  0xFF, 0xFF, 0xFF, 0xFF,	//row 21
  0xFF, 0xFF, 0xFF, 0xFF,	//row 22
  0xFF, 0xFF, 0xFF, 0xFF,	//row 23
  0xFF, 0xFF, 0xFF, 0xFF	//row 24
};

byte Walkmap13[96]=
{
  0x00, 0x00, 0x00, 0x00, 	//row 1
  0x00, 0x00, 0x00, 0x00,	//row 2
  0x00, 0x00, 0x00, 0x00,	//row 3
  0x00, 0x00, 0x00, 0x00,	//row 4
  0x00, 0x00, 0x00, 0x00,	//row 5
  0x00, 0x00, 0x00, 0x00,	//row 6
  0x00, 0x00, 0x00, 0x00,	//row 7
  0xFF, 0xFF, 0xFF, 0xFF,	//row 8
  0x00, 0x00, 0x00, 0x00,	//row 9
  0x00, 0x00, 0x00, 0x00,	//row 10
  0x00, 0x00, 0x00, 0x00,	//row 11
  0x00, 0x00, 0x00, 0x00,	//row 12
  0x00, 0x00, 0x00, 0x00,	//row 13
  0x00, 0x00, 0x00, 0x00,	//row 14
  0x00, 0x00, 0x00, 0x00,	//row 15
  0xFF, 0xFF, 0xFF, 0xFF,	//row 16
  0x00, 0x00, 0x00, 0x00,	//row 17
  0x00, 0x00, 0x00, 0x00,	//row 18
  0x00, 0x00, 0x00, 0x00,	//row 19
  0x00, 0x00, 0x00, 0x00,	//row 20
  0x00, 0x00, 0x00, 0x00,	//row 21
  0x00, 0x00, 0x00, 0x00,	//row 22
  0x00, 0x00, 0x00, 0x00,	//row 23
  0x00, 0x00, 0x00, 0x00,	//row 24
};

byte Walkmap7[96]=
{
  0x00, 0x00, 0x00, 0x00, 	//row 1
  0x00, 0x00, 0x00, 0x00,	//row 2
  0x30, 0x00, 0x30, 0x00,	//row 3
  0x30, 0x00, 0x30, 0x00,	//row 4
  0xC, 0x00, 0xC0, 0x00,	//row 5
  0xC, 0x00, 0xC0, 0x00,	//row 6
  0x3, 0x00, 0x00, 0x3,		//row 7
  0x3, 0x00, 0x00, 0x03,	//row 8
  0x00, 0x00, 0x00, 0x00,	//row 9
  0x00, 0x00, 0x00, 0x00,	//row 10
  0x3, 0x00, 0x00, 0x03,	//row 11
  0xF, 0x00, 0xC0, 0x03,	//row 12
  0x3F, 0x00, 0xF0, 0x03,	//row 13
  0xFF, 0x00, 0xFC, 0x03,	//row 14
  0xFF, 0x01, 0xFE, 0x03,	//row 15
  0xFF, 0x03, 0xFF, 0x03,	//row 16
  0xFF, 0x03, 0xFF, 0x03,	//row 17
  0xFF, 0x03, 0xFF, 0x03,	//row 18
  0xFF, 0x03, 0xFF, 0x03,	//row 19
  0xFF, 0x03, 0xFF, 0x03,	//row 20
  0xFF, 0x03, 0xFF, 0x03,	//row 21
  0xFF, 0x03, 0xFF, 0x03,	//row 22
  0xFF, 0x03, 0xFF, 0x03,	//row 23
  0xFF, 0x03, 0xFF, 0x03,	//row 24
};

byte Walkmap4[96]=
{
  0x00, 0x00, 0x00, 0x00, 	//row 1
  0x00, 0x00, 0x00, 0x00,	//row 2
  0x00, 0x00, 0xFF, 0x00,	//row 3
  0x00, 0x00, 0x3F, 0x00,	//row 4
  0x00, 0x00, 0x1F, 0x00,	//row 5
  0x00, 0x00, 0xF, 0x00,	//row 6
  0x00, 0x00, 0x7, 0x00,	//row 7
  0x00, 0x00, 0x3, 0x00,	//row 8
  0x00, 0x00, 0x3, 0x00,	//row 9
  0x00, 0x00, 0x3, 0x00,	//row 10
  0x00, 0x00, 0x3, 0x00,	//row 11
  0x00, 0x00, 0x3, 0x00,	//row 12
  0x00, 0x00, 0x3, 0x00,	//row 13
  0x00, 0x00, 0x3, 0x00,	//row 14
  0x00, 0x00, 0x3, 0x00,	//row 15
  0x00, 0x00, 0x3, 0x00,	//row 16
  0x00, 0x00, 0x7, 0x00,	//row 17
  0x00, 0x00, 0xF, 0x00,	//row 18
  0x00, 0x00, 0x1F, 0x00,	//row 19
  0x00, 0x00, 0x3F, 0x00,	//row 20
  0x00, 0x00, 0xFF, 0x00,	//row 21
  0x00, 0x00, 0x00, 0x00,	//row 22
  0x00, 0x00, 0x00, 0x00,	//row 23
  0x00, 0x00, 0x00, 0x00,	//row 24
};

byte Walkmap4Ladder[96]=
{
  0x00, 0x00, 0x00, 0x00, 	//row 1
  0x00, 0x00, 0x00, 0x00,	//row 2
  0x00, 0x00, 0xFF, 0x00,	//row 3
  0x00, 0x00, 0x3F, 0x00,	//row 4
  0x00, 0x00, 0x1F, 0x00,	//row 5
  0x00, 0x00, 0xF, 0x00,	//row 6
  0x00, 0x00, 0x7, 0x00,	//row 7
  0x00, 0x00, 0x3, 0x00,	//row 8
  0x00, 0x00, 0x3, 0x00,	//row 9
  0x00, 0x00, 0x3, 0x00,	//row 10
  0x00, 0x00, 0x3, 0x00,	//row 11
  0x00, 0x00, 0x00, 0x00,	//row 12
  0x00, 0x00, 0x00, 0x00,	//row 13
  0x00, 0x00, 0x3, 0x00,	//row 14
  0x00, 0x00, 0x3, 0x00,	//row 15
  0x00, 0x00, 0x3, 0x00,	//row 16
  0x00, 0x00, 0x7, 0x00,	//row 17
  0x00, 0x00, 0xF, 0x00,	//row 18
  0x00, 0x00, 0x1F, 0x00,	//row 19
  0x00, 0x00, 0x3F, 0x00,	//row 20
  0x00, 0x00, 0xFF, 0x00,	//row 21
  0x00, 0x00, 0x00, 0x00,	//row 22
  0x00, 0x00, 0x00, 0x00,	//row 23
  0x00, 0x00, 0x00, 0x00,	//row 24
};

byte Walkmap3[96]=
{
  0x00, 0x00, 0x00, 0x00, 	//row 1
  0x00, 0x00, 0x00, 0x00,	//row 2
  0xC, 0x00, 0xC0, 0x00,	//row 3
  0xC, 0x00, 0xC0, 0x00,	//row 4
  0x3, 0x00, 0x00, 0x3,		//row 5
  0x3, 0x00, 0x00, 0x3,		//row 6
  0x00, 0x00, 0x00, 0x00,	//row 7
  0x00, 0x00, 0x00, 0x00,	//row 8
  0x00, 0x00, 0x00, 0x00,	//row 9
  0x00, 0x00, 0x00, 0x00,	//row 10
  0x00, 0x00, 0x00, 0x00,	//row 11
  0x00, 0x00, 0x00, 0x00,	//row 12
  0x00, 0x00, 0x00, 0x00,	//row 13
  0x00, 0x00, 0x00, 0x00,	//row 14
  0x00, 0x00, 0x00, 0x00,	//row 15
  0x00, 0x00, 0x00, 0x00,	//row 16
  0x00, 0x00, 0x00, 0x00,	//row 17
  0x3, 0x00, 0x00, 0x3,		//row 18
  0x3, 0x00, 0x00, 0x3,		//row 19
  0xC, 0x00, 0xC0, 0x00,	//row 20
  0xC, 0x00, 0xC0, 0x00,	//row 21
  0x00, 0x00, 0x00, 0x00,	//row 22
  0x00, 0x00, 0x00, 0x00,	//row 23
  0x00, 0x00, 0x00, 0x00,	//row 24
};

bool checkCollision(char new_x, char new_y)
{
  byte adjustedY = new_y - 24;
  byte adjustedX = new_x - 16;
  if(map == 11 || map == 2 || map == 5 || map == 9)
    return true;
  else
  {
    byte tile_x = adjustedX >> 3;    
    byte tile_y = adjustedY >> 3;
    
    byte index = tile_y<<2 | tile_x>>3;  // get the correct tile
    byte mask = 1 << (tile_x & 0x7); // crevating a mask to pull out the currect bit to check
    
    if(map == 12 && ((Walkmap12[index] & mask) == 0))
      return true;
    else if(map == 13 && ((Walkmap13[index] & mask) == 0))
      return true;
    else if(map == 7 && ((Walkmap7[index] & mask) == 0))
      return true;
    else if(!haveLader && map == 4 && ((Walkmap4[index] & mask) == 0))
      return true;
    else if(haveLader && map == 4 && ((Walkmap4Ladder[index] & mask) == 0))
      return true;
    else if(map == 3 && ((Walkmap3[index] & mask) == 0))
      return true;
    else
      return false;
  }
}